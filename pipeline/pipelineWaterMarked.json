{
	"name": "pipelineWaterMarked",
	"properties": {
		"activities": [
			{
				"name": "LookupOldWaterMark",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT * FROM watermarktable WHERE TableName = '@{pipeline().parameters.TableName}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "OldWatermark_DS",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "LookupNewWaterMark",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select MAX(stg_source_system_changed_datetime) as NewWatermarkvalue from HEALTH_CHECK\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "STG_DS",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "DeltaCopy",
				"description": "",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LookupNewWaterMark",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "If Condition1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"additionalColumns": [
							{
								"name": "inserted_by",
								"value": {
									"value": "'DE'",
									"type": "Expression"
								}
							},
							{
								"name": "source_system",
								"value": {
									"value": "'STG1'",
									"type": "Expression"
								}
							}
						],
						"sqlReaderQuery": {
							"value": "select * from HEALTH_CHECK where stg_source_system_changed_datetime > '@{variables('oldwatermark')}' and stg_source_system_changed_datetime  <= '@{activity('LookupNewWaterMark').output.firstRow.NewWatermarkvalue}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "inserted_by"
								},
								"sink": {
									"name": "ods_inserted_by",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "source_system"
								},
								"sink": {
									"name": "ods_source_system",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "stg_source_system_changed_datetime",
									"type": "DateTime",
									"physicalType": "datetime2"
								},
								"sink": {
									"name": "ods_source_system_changed_datetime",
									"type": "DateTime",
									"physicalType": "datetime2"
								}
							},
							{
								"source": {
									"name": "id",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "id",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "user_agent",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "user_agent",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "ip_address",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ip_address",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "update_time",
									"type": "DateTime",
									"physicalType": "datetime2"
								},
								"sink": {
									"name": "update_time",
									"type": "DateTime",
									"physicalType": "datetime2"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": false,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "STG_DS",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ODS_DS",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "StoredProceduretoWriteWatermarkActivity",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DeltaCopy",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_write_watermark]",
					"storedProcedureParameters": {
						"stgsourcechanged": {
							"value": {
								"value": "@{activity('LookupNewWaterMark').output.firstRow.NewWatermarkvalue}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "STG_SQL_LS",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "LookupOldWaterMark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@empty(activity('LookupOldWaterMark').output.value[0].WatermarkValue)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Set variable2",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "oldwatermark",
								"value": {
									"value": "@{activity('LookupOldWaterMark').output.value[0].WatermarkValue}",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "oldwatermark",
								"value": {
									"value": "@string('1900-01-01 00:00:00')",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"TableName": {
				"type": "string",
				"defaultValue": "HEALTH_CHECK"
			}
		},
		"variables": {
			"oldwatermark": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2022-04-30T06:55:25Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}